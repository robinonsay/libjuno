/*
    MIT License

    Copyright (c) 2025 Robin A. Onsay

    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files
    (the "Software"), to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify, merge,
    publish, distribute, sublicense, and/or sell copies of the Software,
    and to permit persons to whom the Software is furnished to do so,
    subject to the following conditions:

    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.
*/

/**
    This API has been generated by LibJuno:
    https://www.robinonsay.com/libjuno/
*/

/**
    This header contains the juno_sch library API
    @author
*/
#ifndef JUNO_SCH_API_H
#define JUNO_SCH_API_H
#include "juno/app/app_api.h"
#include "juno/status.h"
#include "juno/module.h"
#include "juno/time/time_api.h"
#include "juno/types.h"
#ifdef __cplusplus
extern "C"
{
#endif

typedef struct JUNO_SCH_API_TAG JUNO_SCH_API_T;

typedef union JUNO_SCH_TAG JUNO_SCH_T;
typedef struct JUNO_SCH_ROOT_TAG JUNO_SCH_ROOT_T;

#define JUNO_SCH_TABLE_NEW(ptArrName, zAppsPerMinorFrame, zNumMinorFrames, ...) \
JUNO_APP_T *ptArrName[zNumMinorFrames * zAppsPerMinorFrame] = {__VA_ARGS__}

struct JUNO_SCH_ROOT_TAG JUNO_MODULE_ROOT(JUNO_SCH_API_T,
    JUNO_TIME_T *ptTime;
    JUNO_APP_T **ptArrSchTable;
    size_t zAppsPerMinorFrame;
    size_t zNumMinorFrames;
    JUNO_TIMESTAMP_T tMinorFramePeriod;
);

struct JUNO_SCH_API_TAG
{
    JUNO_STATUS_T (*Execute)(JUNO_SCH_T *ptJunoSch);
    JUNO_TIMESTAMP_RESULT_T (*GetMinorFramePeriod)(JUNO_SCH_T *ptJunoSch);
    JUNO_TIMESTAMP_RESULT_T (*GetMajorFramePeriod)(JUNO_SCH_T *ptJunoSch);
};

#ifdef __cplusplus
}
#endif
#endif // JUNO_SCH_API_H
