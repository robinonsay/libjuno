/**
    @file
    MIT License

    Copyright (c) 2025 Robin A. Onsay

    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files
    (the "Software"), to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify, merge,
    publish, distribute, sublicense, and/or sell copies of the Software,
    and to permit persons to whom the Software is furnished to do so,
    subject to the following conditions:

    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.
*/

/**
    This API has been generated by LibJuno:
    https://www.robinonsay.com/libjuno/
*/

/**
    This header contains the template library API
    @author
*/
#ifndef TEMPLATE_API_H
#define TEMPLATE_API_H
#include "juno/status.h"
#include "juno/module.h"
#ifdef __cplusplus
extern "C"
{
#endif

typedef struct TEMPLATE_API_TAG TEMPLATE_API_T;

JUNO_MODULE_DECLARE(TEMPLATE_T);
JUNO_MODULE_BASE_DECLARE(TEMPLATE_BASE_T);

JUNO_MODULE_BASE(TEMPLATE_BASE_T, TEMPLATE_API_T,
    /*
    
        TODO: Add implementation independent member variables here
    
    */
);

struct TEMPLATE_API_TAG
{
    /// Initializes the module and resources for template
    JUNO_STATUS_T (*Init)(
        TEMPLATE_T *ptTemplate
        /* TODO: Insert initialization arguments for module members here*/
    );
    /// Frees resources allocated by template
    JUNO_STATUS_T (*Free)(TEMPLATE_T *ptTemplate);
};

#ifdef __cplusplus
}
#endif
#endif // TEMPLATE_API_H
